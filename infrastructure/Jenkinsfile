pipeline {
    agent any
    environment {
        DOCKER_PASSWORD = credentials("docker_password")
        GITHUB_TOKEN = credentials("github_token")
        TMDB_CONNECTION_TOKEN = credentials("tmdb_connection_token")
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }
        stage('Tag image') {
            steps {
                script {
                    sh([script: 'git fetch --tag', returnStdout: true]).trim()
                    env.MAJOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 1', returnStdout: true]).trim()
                    env.MINOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 2', returnStdout: true]).trim()
                    env.PATCH_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 3', returnStdout: true]).trim()
                    env.IMAGE_TAG = "${env.MAJOR_VERSION}.\$((${env.MINOR_VERSION} + 1)).${env.PATCH_VERSION}"
                }
                sh "git tag ${env.IMAGE_TAG}"
                sh "git push https://$GITHUB_TOKEN@github.com/99-99-SLA/service.git ${env.IMAGE_TAG}"
                sh "docker build -t 9999sla/hello-img:${MAJOR_VERSION}.\$((${MINOR_VERSION} + 1)).${PATCH_VERSION} ."
            }
        }
        stage('Push image to Docker Hub') {
            withCredentials([usernamePassword(credentialsId: 'docker_password', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                sh 'echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin'

                // Push the image to Docker Hub
                sh "docker push 9999sla/hello-img:${MAJOR_VERSION}.\$((${MINOR_VERSION} + 1)).${PATCH_VERSION}"
            }
            steps {
                sh "docker login docker.io -u <username> -p <password>"
                sh "docker push 9999sla/hello-img:${IMAGE_VERSION}"
            }
        }
        stage('Run app') {
            steps {
                sh "IMAGE_TAG=${env.IMAGE_TAG} docker compose up -d hello mongo"
            }
        }
        stage('Test E2E') {
            steps {
                sh './gradlew testE2E'
            }
        }
    }
}
